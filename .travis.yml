language: go
go:
  - 1.0
  - 1.1
  - 1.1.2
  - 1.2
  - 1.2.2
  - 1.3
  - 1.4
  - tip
env:
  global:
    - secure: "eCAx50OXbU5V3d65riaurCUQkma9/JXMeB86ozdXQN8k/ZAyNCwarTJaPE34pqB5pmZGiY3aH/HWmx6/gFQXJVEmhVO0YbcfASaBIqoBAwk4zkPxTutexnOLeKCNGqWLDF9Pd6u/ya6dyaD/JDVG24fJGP47ZVx+CFkZodkfmw4="
matrix:
  fast_finish: true
  allow_failures:
    - go: tip
branches:
  only:
    - master
install: true
before_script:
  - export PATH=${PATH}:${HOME}/gopath/bin:${GOPATH}
  - export FRESH_VERSION=$(go version | perl -ne 'print "true" if /^.+go(1\.(2(\.[23])?|[34]))|devel/')
  - |
    if [ "x${FRESH_VERSION}" == "xtrue" ]; then
      URL="golang.org/x/tools/cmd/cover"
      if [ "x$(echo "$GO_VERSION < 1.4" | bc)" != "x0" ]; then URL="code.google.com/p/go.tools/cmd/cover"; fi
      travis_retry go get -v -x $URL
    fi
  - if [ "x${FRESH_VERSION}" == "xtrue" ]; then travis_retry go get -v -x github.com/axw/gocov/gocov; fi
  - if [ "x${FRESH_VERSION}" == "xtrue" ]; then travis_retry go get -v -x github.com/mattn/goveralls; fi
  - travis_retry go get -v -x github.com/kwilczynski/container/stack
script:
  - if [ "x${FRESH_VERSION}" == "xtrue" ]; then pushd ${PWD}/stack; goveralls -v -repotoken $REPOSITORY_TOKEN; popd; else go test -v -x ./...; fi
